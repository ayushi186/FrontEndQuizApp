{"ast":null,"code":"var _jsxFileName = \"/Users/ayushikarn/Desktop/QuizApp/quizreactapp/src/components/QuestionComp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ResultComp from \"./ResultComp\";\nimport styled from \"styled-components\";\nimport patternlight from \"../components/assets/images/pattern-background-desktop-light.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { trackwronglyansweredquestion } from \"../store/wrongandrightAnsweredReducer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Options = /*#__PURE__*/function (Options) {\n  Options[\" 0 \"] = \"A\";\n  Options[\"1\"] = \"B\";\n  Options[\"2\"] = \"C\";\n  Options[\"3\"] = \"D\";\n  return Options;\n}(Options || {});\nconst Container = styled.div`\n  height: 100vh;\n  border: blue solid 1px;\n  display: flex;\n  background-color: var(--lightblue);\n  background-image: url(${patternlight});\n  background-position: center;\n`;\n_c = Container;\nconst Questiontile = styled.div`\n  flex: 1;\n  margin: 20px;\n  width: 564px;\n  height: 86px;\n  border: lightgrey solid 5px;\n  border-radius: 5px;\n  background-color: var(--verylightblue);\n  pointer: cursor !important;\n`;\n_c2 = Questiontile;\nconst QuestionComp = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    state\n  } = useLocation();\n  const {\n    title,\n    questions\n  } = state;\n  const [questionCount, setQuestionCount] = useState(Object.keys(questions).length);\n  // counter will track the id of the question which must be on the screen.\n  const [counter, setCounter] = useState(0);\n  const [reversecounter, setReverseCounter] = useState(Object.keys(questions).length);\n  const [selectedOption, setSelectedOption] = useState();\n  const [actualAnswer, setActualAnswers] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState();\n  const [index, setIndex] = useState();\n  const [clickCounter, setClickCounter] = useState(false);\n  //console.log(\"selectedOption\", selectedOption);\n\n  const answerCheck = (counter, i) => {\n    setClickCounter(true);\n    if (selectedOption === actualAnswer) {\n      setCorrectAnswer(\"#26D782\");\n    } else {\n      dispatch(trackwronglyansweredquestion(i));\n      setCorrectAnswer(\"#EE5454\");\n    }\n  };\n  const moveToNextQuestion = () => {\n    setClickCounter(false);\n    setCorrectAnswer(\"\");\n    setCounter(counter + 1);\n  };\n  const storeAnswer = e => {\n    setSelectedOption(e.currentTarget.textContent);\n    if (selectedOption) {\n      console.log(selectedOption);\n    }\n  };\n  if (counter !== reversecounter) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), questions.map((i, idx) => {\n          if (idx === counter) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  width: \"100%\",\n                  flex: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"50%\"\n                  },\n                  children: i.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"50%\",\n                    display: \"flex\",\n                    flexDirection: \"column\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: i.options.map((o, idx) => {\n                      const id = `${idx}_${o}`;\n                      return /*#__PURE__*/_jsxDEV(Questiontile, {\n                        style: {\n                          borderColor: index === id ? correctAnswer : \"\"\n                        },\n                        onClick: e => {\n                          setCorrectAnswer(\"#A729F5\");\n                          setIndex(id);\n                          setActualAnswers(i.answer);\n                          storeAnswer(e);\n                          console.log(idx);\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: idx.toString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 124,\n                          columnNumber: 31\n                        }, this), o]\n                      }, id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      !clickCounter ? answerCheck(counter, i) : moveToNextQuestion();\n                    },\n                    children: clickCounter ? \"Next Question \" : \" Submit Your Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ResultComp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(QuestionComp, \"vxtMmwflt6U48rKPXXcawch2M+k=\", false, function () {\n  return [useDispatch, useLocation];\n});\n_c3 = QuestionComp;\nexport default QuestionComp;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Questiontile\");\n$RefreshReg$(_c3, \"QuestionComp\");","map":{"version":3,"names":["React","useState","useLocation","ResultComp","styled","patternlight","useDispatch","trackwronglyansweredquestion","jsxDEV","_jsxDEV","Fragment","_Fragment","Options","Container","div","_c","Questiontile","_c2","QuestionComp","_s","dispatch","state","title","questions","questionCount","setQuestionCount","Object","keys","length","counter","setCounter","reversecounter","setReverseCounter","selectedOption","setSelectedOption","actualAnswer","setActualAnswers","correctAnswer","setCorrectAnswer","index","setIndex","clickCounter","setClickCounter","answerCheck","i","moveToNextQuestion","storeAnswer","e","currentTarget","textContent","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","style","display","width","flex","question","flexDirection","options","o","id","borderColor","onClick","answer","toString","_c3","$RefreshReg$"],"sources":["/Users/ayushikarn/Desktop/QuizApp/quizreactapp/src/components/QuestionComp.tsx"],"sourcesContent":["import React, { SyntheticEvent, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ResultComp from \"./ResultComp\";\nimport styled from \"styled-components\";\nimport patternlight from \"../components/assets/images/pattern-background-desktop-light.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { trackwronglyansweredquestion } from \"../store/wrongandrightAnsweredReducer\";\n\nenum Options {\n  \" 0 \" = \"A\",\n  \"1\" = \"B\",\n  \"2\" = \"C\",\n  \"3\" = \"D\",\n}\n\ninterface IProps {\n  title: string;\n  icon: string;\n  questions: Array<Tquestions>;\n}\n\nexport type Tquestions = {\n  question: string;\n  options: string[];\n  answer: string;\n};\n\nconst Container = styled.div`\n  height: 100vh;\n  border: blue solid 1px;\n  display: flex;\n  background-color: var(--lightblue);\n  background-image: url(${patternlight});\n  background-position: center;\n`;\n\nconst Questiontile = styled.div<{ borderColor?: string; idx?: number }>`\n  flex: 1;\n  margin: 20px;\n  width: 564px;\n  height: 86px;\n  border: lightgrey solid 5px;\n  border-radius: 5px;\n  background-color: var(--verylightblue);\n  pointer: cursor !important;\n`;\nconst QuestionComp = () => {\n  const dispatch = useDispatch();\n  const { state } = useLocation();\n  const { title, questions } = state;\n  const [questionCount, setQuestionCount] = useState(\n    Object.keys(questions).length\n  );\n  // counter will track the id of the question which must be on the screen.\n  const [counter, setCounter] = useState(0);\n  const [reversecounter, setReverseCounter] = useState(\n    Object.keys(questions).length\n  );\n  const [selectedOption, setSelectedOption] = useState<string | null>();\n  const [actualAnswer, setActualAnswers] = useState<string | null>();\n  const [correctAnswer, setCorrectAnswer] = useState<string>();\n  const [index, setIndex] = useState<string>();\n  const [clickCounter, setClickCounter] = useState<boolean>(false);\n  //console.log(\"selectedOption\", selectedOption);\n\n  const answerCheck = (counter: number, i: any) => {\n    setClickCounter(true);\n    if (selectedOption === actualAnswer) {\n      setCorrectAnswer(\"#26D782\");\n    } else {\n      dispatch(trackwronglyansweredquestion(i));\n      setCorrectAnswer(\"#EE5454\");\n    }\n  };\n  const moveToNextQuestion = () => {\n    setClickCounter(false);\n    setCorrectAnswer(\"\");\n    setCounter(counter + 1);\n  };\n\n  const storeAnswer = (e: SyntheticEvent) => {\n    setSelectedOption(e.currentTarget.textContent);\n\n    if (selectedOption) {\n      console.log(selectedOption);\n    }\n  };\n\n  if (counter !== reversecounter) {\n    return (\n      <>\n        <Container>\n          <div></div>\n          {questions.map((i: any, idx: number) => {\n            if (idx === counter) {\n              return (\n                <>\n                  <div\n                    style={{ display: \"flex\", width: \"100%\", flex: 1 }}\n                    key={idx}>\n                    <div style={{ width: \"50%\" }}>{i.question}</div>\n                    <div\n                      style={{\n                        width: \"50%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                      }}>\n                      <ul>\n                        {i.options.map((o: string, idx: number) => {\n                          const id = `${idx}_${o}`;\n                          return (\n                            <Questiontile\n                              style={{\n                                borderColor: index === id ? correctAnswer : \"\",\n                              }}\n                              key={id}\n                              onClick={(e: SyntheticEvent) => {\n                                setCorrectAnswer(\"#A729F5\");\n                                setIndex(id);\n                                setActualAnswers(i.answer);\n                                storeAnswer(e);\n                                console.log(idx);\n                              }}>\n                              <div>{idx.toString()}</div>\n                              {o}\n                            </Questiontile>\n                          );\n                        })}\n                      </ul>\n                      <button\n                        onClick={() => {\n                          !clickCounter\n                            ? answerCheck(counter, i)\n                            : moveToNextQuestion();\n                        }}>\n                        {clickCounter\n                          ? \"Next Question \"\n                          : \" Submit Your Answer\"}\n                      </button>\n                    </div>\n                  </div>\n                </>\n              );\n            }\n          })}\n        </Container>\n      </>\n    );\n  } else {\n    return <ResultComp />;\n  }\n};\n\nexport default QuestionComp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA4BC,QAAQ,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,YAAY,MAAM,kEAAkE;AAC3F,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,4BAA4B,QAAQ,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAAA,IAEhFC,OAAO,0BAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAA,OAAPA,OAAO;AAAA,EAAPA,OAAO;AAmBZ,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAG;AAC5B;AACA;AACA;AACA;AACA,0BAA0BT,YAAY;AACtC;AACA,CAAC;AAACU,EAAA,GAPIF,SAAS;AASf,MAAMG,YAAY,GAAGZ,MAAM,CAACU,GAA2C;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GATID,YAAY;AAUlB,MAAME,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEe;EAAM,CAAC,GAAGnB,WAAW,CAAC,CAAC;EAC/B,MAAM;IAAEoB,KAAK;IAAEC;EAAU,CAAC,GAAGF,KAAK;EAClC,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAChDyB,MAAM,CAACC,IAAI,CAACJ,SAAS,CAAC,CAACK,MACzB,CAAC;EACD;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAClDyB,MAAM,CAACC,IAAI,CAACJ,SAAS,CAAC,CAACK,MACzB,CAAC;EACD,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAgB,CAAC;EACrE,MAAM,CAACkC,YAAY,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAgB,CAAC;EAClE,MAAM,CAACoC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrC,QAAQ,CAAS,CAAC;EAC5D,MAAM,CAACsC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAS,CAAC;EAC5C,MAAM,CAACwC,YAAY,EAAEC,eAAe,CAAC,GAAGzC,QAAQ,CAAU,KAAK,CAAC;EAChE;;EAEA,MAAM0C,WAAW,GAAGA,CAACd,OAAe,EAAEe,CAAM,KAAK;IAC/CF,eAAe,CAAC,IAAI,CAAC;IACrB,IAAIT,cAAc,KAAKE,YAAY,EAAE;MACnCG,gBAAgB,CAAC,SAAS,CAAC;IAC7B,CAAC,MAAM;MACLlB,QAAQ,CAACb,4BAA4B,CAACqC,CAAC,CAAC,CAAC;MACzCN,gBAAgB,CAAC,SAAS,CAAC;IAC7B;EACF,CAAC;EACD,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;IAC/BH,eAAe,CAAC,KAAK,CAAC;IACtBJ,gBAAgB,CAAC,EAAE,CAAC;IACpBR,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACzB,CAAC;EAED,MAAMiB,WAAW,GAAIC,CAAiB,IAAK;IACzCb,iBAAiB,CAACa,CAAC,CAACC,aAAa,CAACC,WAAW,CAAC;IAE9C,IAAIhB,cAAc,EAAE;MAClBiB,OAAO,CAACC,GAAG,CAAClB,cAAc,CAAC;IAC7B;EACF,CAAC;EAED,IAAIJ,OAAO,KAAKE,cAAc,EAAE;IAC9B,oBACEtB,OAAA,CAAAE,SAAA;MAAAyC,QAAA,eACE3C,OAAA,CAACI,SAAS;QAAAuC,QAAA,gBACR3C,OAAA;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,EACVjC,SAAS,CAACkC,GAAG,CAAC,CAACb,CAAM,EAAEc,GAAW,KAAK;UACtC,IAAIA,GAAG,KAAK7B,OAAO,EAAE;YACnB,oBACEpB,OAAA,CAAAE,SAAA;cAAAyC,QAAA,eACE3C,OAAA;gBACEkD,KAAK,EAAE;kBAAEC,OAAO,EAAE,MAAM;kBAAEC,KAAK,EAAE,MAAM;kBAAEC,IAAI,EAAE;gBAAE,CAAE;gBAAAV,QAAA,gBAEnD3C,OAAA;kBAAKkD,KAAK,EAAE;oBAAEE,KAAK,EAAE;kBAAM,CAAE;kBAAAT,QAAA,EAAER,CAAC,CAACmB;gBAAQ;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChD/C,OAAA;kBACEkD,KAAK,EAAE;oBACLE,KAAK,EAAE,KAAK;oBACZD,OAAO,EAAE,MAAM;oBACfI,aAAa,EAAE;kBACjB,CAAE;kBAAAZ,QAAA,gBACF3C,OAAA;oBAAA2C,QAAA,EACGR,CAAC,CAACqB,OAAO,CAACR,GAAG,CAAC,CAACS,CAAS,EAAER,GAAW,KAAK;sBACzC,MAAMS,EAAE,GAAG,GAAGT,GAAG,IAAIQ,CAAC,EAAE;sBACxB,oBACEzD,OAAA,CAACO,YAAY;wBACX2C,KAAK,EAAE;0BACLS,WAAW,EAAE7B,KAAK,KAAK4B,EAAE,GAAG9B,aAAa,GAAG;wBAC9C,CAAE;wBAEFgC,OAAO,EAAGtB,CAAiB,IAAK;0BAC9BT,gBAAgB,CAAC,SAAS,CAAC;0BAC3BE,QAAQ,CAAC2B,EAAE,CAAC;0BACZ/B,gBAAgB,CAACQ,CAAC,CAAC0B,MAAM,CAAC;0BAC1BxB,WAAW,CAACC,CAAC,CAAC;0BACdG,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;wBAClB,CAAE;wBAAAN,QAAA,gBACF3C,OAAA;0BAAA2C,QAAA,EAAMM,GAAG,CAACa,QAAQ,CAAC;wBAAC;0BAAAlB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,EAC1BU,CAAC;sBAAA,GATGC,EAAE;wBAAAd,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAUK,CAAC;oBAEnB,CAAC;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA,CAAC,eACL/C,OAAA;oBACE4D,OAAO,EAAEA,CAAA,KAAM;sBACb,CAAC5B,YAAY,GACTE,WAAW,CAACd,OAAO,EAAEe,CAAC,CAAC,GACvBC,kBAAkB,CAAC,CAAC;oBAC1B,CAAE;oBAAAO,QAAA,EACDX,YAAY,GACT,gBAAgB,GAChB;kBAAqB;oBAAAY,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA,GAxCDE,GAAG;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAyCL;YAAC,gBACN,CAAC;UAEP;QACF,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC,gBACZ,CAAC;EAEP,CAAC,MAAM;IACL,oBAAO/C,OAAA,CAACN,UAAU;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvB;AACF,CAAC;AAACrC,EAAA,CAzGID,YAAY;EAAA,QACCZ,WAAW,EACVJ,WAAW;AAAA;AAAAsE,GAAA,GAFzBtD,YAAY;AA2GlB,eAAeA,YAAY;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAuD,GAAA;AAAAC,YAAA,CAAA1D,EAAA;AAAA0D,YAAA,CAAAxD,GAAA;AAAAwD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}