{"ast":null,"code":"var _jsxFileName = \"/Users/ayushikarn/Desktop/QuizApp/quizreactapp/src/components/QuestionComp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ResultComp from \"./ResultComp\";\nimport styled from \"styled-components\";\nimport patternlight from \"../components/assets/images/pattern-background-desktop-light.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  height: 100vh;\n  border: blue solid 1px;\n  display: flex;\n  background-color: var(--lightblue);\n  background-image: url(${patternlight});\n  background-position: center;\n`;\n_c = Container;\nconst Questiontile = styled.div`\n  flex: 1;\n  margin: 20px;\n  width: 564px;\n  height: 86px;\n  border: lightgrey solid 5px;\n  border-radius: 5px;\n  background-color: var(--verylightblue);\n  pointer: cursor !important;\n`;\n_c2 = Questiontile;\nconst QuestionComp = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    state\n  } = useLocation();\n  const {\n    title,\n    questions\n  } = state;\n  const [questionCount, setQuestionCount] = useState(Object.keys(questions).length);\n  // counter will track the id of the question which must be on the screen.\n  const [counter, setCounter] = useState(0);\n  const [reversecounter, setReverseCounter] = useState(Object.keys(questions).length);\n  const [selectedOption, setSelectedOption] = useState();\n  const [actualAnswer, setActualAnswers] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState();\n  const [index, setIndex] = useState();\n  const [clickCounter, setClickCounter] = useState(false);\n  //console.log(\"selectedOption\", selectedOption);\n\n  const answerCheck = counter => {\n    console.log(selectedOption);\n    selectedOption === actualAnswer ? setCorrectAnswer(\"green\") : setCorrectAnswer(\"red\");\n    if (clickCounter) {\n      setClickCounter(false);\n      setCorrectAnswer(\"\");\n      setCounter(counter + 1);\n    }\n  };\n  const storeAnswer = e => {\n    setSelectedOption(e.currentTarget.textContent);\n    if (selectedOption) {\n      console.log(selectedOption);\n    }\n  };\n  if (counter !== reversecounter) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: questions.map((i, idx) => {\n          if (idx === counter) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: i.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: i.options.map((o, idx) => {\n                  const id = `${idx}_${o}`;\n                  return /*#__PURE__*/_jsxDEV(Questiontile, {\n                    style: {\n                      borderColor: index === id ? correctAnswer : \"\"\n                    },\n                    onClick: e => {\n                      setIndex(id);\n                      setActualAnswers(i.answer);\n                      storeAnswer(e);\n                      console.log(idx);\n                    },\n                    children: o\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setClickCounter(true);\n                  answerCheck(counter);\n                },\n                children: clickCounter ? \"Next Question \" : \" Submit Your Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ResultComp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(QuestionComp, \"vxtMmwflt6U48rKPXXcawch2M+k=\", false, function () {\n  return [useDispatch, useLocation];\n});\n_c3 = QuestionComp;\nexport default QuestionComp;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Questiontile\");\n$RefreshReg$(_c3, \"QuestionComp\");","map":{"version":3,"names":["React","useState","useLocation","ResultComp","styled","patternlight","useDispatch","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Questiontile","_c2","QuestionComp","_s","dispatch","state","title","questions","questionCount","setQuestionCount","Object","keys","length","counter","setCounter","reversecounter","setReverseCounter","selectedOption","setSelectedOption","actualAnswer","setActualAnswers","correctAnswer","setCorrectAnswer","index","setIndex","clickCounter","setClickCounter","answerCheck","console","log","storeAnswer","e","currentTarget","textContent","children","map","i","idx","question","fileName","_jsxFileName","lineNumber","columnNumber","options","o","id","style","borderColor","onClick","answer","_c3","$RefreshReg$"],"sources":["/Users/ayushikarn/Desktop/QuizApp/quizreactapp/src/components/QuestionComp.tsx"],"sourcesContent":["import React, { SyntheticEvent, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ResultComp from \"./ResultComp\";\nimport styled from \"styled-components\";\nimport patternlight from \"../components/assets/images/pattern-background-desktop-light.svg\";\nimport { useDispatch } from \"react-redux\";\n\ninterface IProps {\n  title: string;\n  icon: string;\n  questions: Array<Tquestions>;\n}\n\nexport type Tquestions = {\n  question: string;\n  options: string[];\n  answer: string;\n};\n\nconst Container = styled.div`\n  height: 100vh;\n  border: blue solid 1px;\n  display: flex;\n  background-color: var(--lightblue);\n  background-image: url(${patternlight});\n  background-position: center;\n`;\n\nconst Questiontile = styled.div<{ borderColor?: string; idx?: number }>`\n  flex: 1;\n  margin: 20px;\n  width: 564px;\n  height: 86px;\n  border: lightgrey solid 5px;\n  border-radius: 5px;\n  background-color: var(--verylightblue);\n  pointer: cursor !important;\n`;\nconst QuestionComp = () => {\n  const dispatch = useDispatch();\n  const { state } = useLocation();\n  const { title, questions } = state;\n  const [questionCount, setQuestionCount] = useState(\n    Object.keys(questions).length\n  );\n  // counter will track the id of the question which must be on the screen.\n  const [counter, setCounter] = useState(0);\n  const [reversecounter, setReverseCounter] = useState(\n    Object.keys(questions).length\n  );\n  const [selectedOption, setSelectedOption] = useState<string | null>();\n  const [actualAnswer, setActualAnswers] = useState<string | null>();\n  const [correctAnswer, setCorrectAnswer] = useState<string>();\n  const [index, setIndex] = useState<string>();\n  const [clickCounter, setClickCounter] = useState<boolean>(false);\n  //console.log(\"selectedOption\", selectedOption);\n\n  const answerCheck = (counter: number) => {\n    console.log(selectedOption);\n    selectedOption === actualAnswer\n      ? setCorrectAnswer(\"green\")\n      : setCorrectAnswer(\"red\");\n    if (clickCounter) {\n      setClickCounter(false);\n      setCorrectAnswer(\"\");\n      setCounter(counter + 1);\n    }\n  };\n\n  const storeAnswer = (e: SyntheticEvent) => {\n    setSelectedOption(e.currentTarget.textContent);\n\n    if (selectedOption) {\n      console.log(selectedOption);\n    }\n  };\n\n  if (counter !== reversecounter) {\n    return (\n      <>\n        <Container>\n          {questions.map((i: any, idx: number) => {\n            if (idx === counter) {\n              return (\n                <div key={idx}>\n                  <div>{i.question}</div>\n                  <ul>\n                    {i.options.map((o: string, idx: number) => {\n                      const id = `${idx}_${o}`;\n                      return (\n                        <Questiontile\n                          style={{\n                            borderColor: index === id ? correctAnswer : \"\",\n                          }}\n                          key={id}\n                          onClick={(e: SyntheticEvent) => {\n                            setIndex(id);\n                            setActualAnswers(i.answer);\n                            storeAnswer(e);\n                            console.log(idx);\n                          }}>\n                          {o}\n                        </Questiontile>\n                      );\n                    })}\n                  </ul>\n                  <button\n                    onClick={() => {\n                      setClickCounter(true);\n                      answerCheck(counter);\n                    }}>\n                    {clickCounter ? \"Next Question \" : \" Submit Your Answer\"}\n                  </button>\n                </div>\n              );\n            }\n          })}\n        </Container>\n      </>\n    );\n  } else {\n    return <ResultComp />;\n  }\n};\n\nexport default QuestionComp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}